package clientcaro;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Caro.java
 *
 * Created on Dec 26, 2011, 3:39:22 PM
 */
import java.awt.AWTException;
import java.awt.CheckboxMenuItem;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Menu;
import java.awt.MenuItem;
import java.awt.Point;
import java.awt.PopupMenu;
import java.awt.RenderingHints;
import java.awt.SystemTray;
import java.awt.TrayIcon;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.Timer;
import java.util.TimerTask;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;
import javax.swing.JTextArea;
import javax.swing.border.LineBorder;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;

class AddClient implements Runnable {

    JTextArea chatTextArea;
    Socket client;

    public AddClient(Socket client, JTextArea chatTextArea) {
        this.client = client;
        this.chatTextArea = chatTextArea;
    }

    public void run() {
        String line;
        BufferedReader in = null;
        PrintWriter out = null;
        try {
            in = new BufferedReader(new InputStreamReader(client.getInputStream()));
            out = new PrintWriter(client.getOutputStream(), true);

        } catch (IOException e) {
            System.out.println("Accept failed: 4444");
            System.exit(-1);
        }
        while (true) {
            try {
                line = in.readLine();
                chatTextArea.append("Client : " + line + "\n");
            } catch (IOException ex) {
            }
        }
    }
}

/**
 *
 * @author Kien
 */
public class CaroServer extends javax.swing.JFrame {
    public int port_server1;
    public int port_server2;
            
    /** Creates new form Caro */
    public CaroServer(int _portserver1, int _portserver2, String name) {
        initComponents();
   
        setVisible(true);
        setTitle(name + " (Server)");
        port_server1 = _portserver1; // Port dung tao server de choi game
        port_server2 = _portserver2; // Port dung de chat khi choi game
        
        class ListenGame extends Thread {

            public ListenGame() {
                start();
            }

            @Override
            public void run() {
                listenSocketGamne();
            }
        }
        new ListenGame();
        createTrayIcon();
//        initTimer();
    }

  
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        rbBua = new javax.swing.JRadioButton();
        rbKeo = new javax.swing.JRadioButton();
        rbBao = new javax.swing.JRadioButton();
        btnSend = new javax.swing.JButton();
        lbTime = new javax.swing.JLabel();
        lbScoreYou = new javax.swing.JLabel();
        lbScorePlayer = new javax.swing.JLabel();
        lbWin = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        exitMenuItem = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Caro Sever");
        setPreferredSize(new java.awt.Dimension(400, 400));
        setSize(new java.awt.Dimension(500, 500));

        buttonGroup1.add(rbBua);
        rbBua.setSelected(true);
        rbBua.setText("Bua");

        buttonGroup1.add(rbKeo);
        rbKeo.setText("Keo");

        buttonGroup1.add(rbBao);
        rbBao.setText("Bao");

        btnSend.setText("Gửi");
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });

        lbTime.setText("Thời gian");

        lbScoreYou.setText("You:");

        lbScorePlayer.setText("Player:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lbScoreYou))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lbScorePlayer)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 33, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbTime)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(rbBua)
                        .addGap(48, 48, 48)
                        .addComponent(rbKeo))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lbWin)
                        .addComponent(btnSend)))
                .addGap(42, 42, 42)
                .addComponent(rbBao)
                .addGap(54, 54, 54))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(lbTime)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbBua)
                    .addComponent(rbKeo)
                    .addComponent(rbBao))
                .addGap(51, 51, 51)
                .addComponent(btnSend)
                .addGap(29, 29, 29)
                .addComponent(lbWin)
                .addGap(46, 46, 46)
                .addComponent(lbScoreYou)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbScorePlayer)
                .addContainerGap())
        );

        btnSend.getAccessibleContext().setAccessibleName("Gửi");

        fileMenu.setText("File");

        exitMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.ALT_MASK));
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        jMenu2.setText("Options");
        menuBar.add(jMenu2);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        this.dispose();
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
     try {
        if(rbBua.isSelected()) {
            outGame.write(0);
            outGame.flush();
            youDanh = 0;
        } else if(rbKeo.isSelected()) {
            outGame.write(2);
            outGame.flush();
            youDanh = 2;
        } else {
            outGame.write(1);
            outGame.flush();
            youDanh = 1;
        }
         
        } catch (IOException ex) {}
    }//GEN-LAST:event_btnSendActionPerformed

   

    public void pointCalculator(int you, int player) {
        if((you + 1) % 3 == player) {
            playerScore += 1;
            lbWin.setText("Bạn thua");
            
        } else if(you == player) {
            playerScore += 0.5;
            yourScore += 0.5;
            lbWin.setText("Hòa");
            
        } else {
            yourScore += 1;
            lbWin.setText("Bạn thắng");
        }
        
        lbScoreYou.setText("You: " + yourScore);
        lbScorePlayer.setText("Player: " + playerScore);
    }
    
    
    public void initTimer() {
        Timer timer = new Timer();

    TimerTask task = new TimerTask(){
        private int i = 0;
        public void run(){
            if (i <= 30) {
                lbTime.setText("Thời gian: " + i++);
            }
        }
    };
    timer.scheduleAtFixedRate(task, 0, 1000); //1000
    }


    public void listenSocketGamne() {

        try {
            serverGame = new ServerSocket(port_server2);
            Socket socket = serverGame.accept();
            OutputStream o = socket.getOutputStream();
            outGame = new ObjectOutputStream(o);
            InputStream i = socket.getInputStream();
            inGame = new ObjectInputStream(i);
        } catch (IOException e) {
            System.out.println("Could not listen on port 4444");
            System.exit(-1);
        }

        while (true) {
            try {
                Point s = null;
                try {
                    playerDanh = inGame.read();
                    System.out.println("client danh " + playerDanh);
                    pointCalculator(youDanh, playerDanh);
                } catch (Exception ex) {
                    Logger.getLogger(CaroServer.class.getName()).log(Level.SEVERE, null, ex);
                }
                this.toFront();
//                if (isWin(false)) {//quân đỏ thắng
//                    JOptionPane.showMessageDialog(this, "Bạn đã thua");
//                    startUser = true;
//                    checked.removeAllElements();
//                }
                user = true;//quân đen
                isPause = false;

            } catch (Exception ex) {
            }
        }
    }
public void createTrayIcon(){
    //Check the SystemTray is supported
        if (!SystemTray.isSupported()) {
            System.out.println("SystemTray is not supported");
            return;
        }
        final PopupMenu popup = new PopupMenu();
        final TrayIcon trayIcon =
                new TrayIcon(img,"Tray Icon");
        final SystemTray tray = SystemTray.getSystemTray();

        // Create a pop-up menu components
        MenuItem aboutItem = new MenuItem("About");
        CheckboxMenuItem cb1 = new CheckboxMenuItem("Set auto size");
        CheckboxMenuItem cb2 = new CheckboxMenuItem("Set tooltip");
        Menu displayMenu = new Menu("Display");
        MenuItem errorItem = new MenuItem("Error");
        MenuItem warningItem = new MenuItem("Warning");
        MenuItem infoItem = new MenuItem("Info");
        MenuItem noneItem = new MenuItem("None");
        MenuItem exitItem = new MenuItem("Exit");

        //Add components to pop-up menu
        popup.add(aboutItem);
        popup.addSeparator();
        popup.add(cb1);
        popup.add(cb2);
        popup.addSeparator();
        popup.add(displayMenu);
        displayMenu.add(errorItem);
        displayMenu.add(warningItem);
        displayMenu.add(infoItem);
        displayMenu.add(noneItem);
        popup.add(exitItem);

        trayIcon.setPopupMenu(popup);

        try {
            tray.add(trayIcon);
        } catch (AWTException e) {
            System.out.println("TrayIcon could not be added.");
        }
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSend;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lbScorePlayer;
    private javax.swing.JLabel lbScoreYou;
    private javax.swing.JLabel lbTime;
    private javax.swing.JLabel lbWin;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JRadioButton rbBao;
    private javax.swing.JRadioButton rbBua;
    private javax.swing.JRadioButton rbKeo;
    // End of variables declaration//GEN-END:variables
    private int X0 = 20;
    private int Y0 = 20;
    private int Width = 32;
    private int Size = 15;
    private int currentRow = -1;
    private int currentColumn = -1;
    private Point currentPoint = new Point();
    /**
     * true  là user 1(màu đen)
     * false là user 2(màu đỏ)
     */
    private boolean user = true;
    /**
     * Vị trí chẵn lưu các điểm đã đánh của user 1
     * Vị trí lẻ lưu các điểm đã đánh của user 2
     */
    private Vector<Point> checked = new Vector<Point>();
    
    Socket client = null;
    ServerSocket serverGame = null;
    Socket clientGame = null;
    
    ObjectInputStream inGame = null;
    ObjectOutputStream outGame = null;
    String line;
    boolean isPause = false;
    boolean startUser = true;// quân đen đi trước
    private Image img = new ImageIcon(this.getClass().getResource(
            "/images/im.png")).getImage();
    
    int playerDanh = -1;
    int youDanh = -1;
    float playerScore = 0;
    float yourScore = 0;

    
}
